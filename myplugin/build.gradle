/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java library project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.12/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    // Apply the java-library plugin for API and implementation separation.
    id 'java-library'
}

apply from: "../common.gradle"

repositories {
    mavenCentral()
}

dependencies {
    // H2 is an in-process database
    // https://mvnrepository.com/artifact/com.h2database/h2
    implementation 'com.h2database:h2:2.3.232'
    
    // Compile-time only dependencies for Freemind
    compileOnly files('../libs/freemind.jar', '../libs/bindings.jar')
}

// Add reference to Freemind source Zip file if it exists locally
// Ref: https://discuss.gradle.org/t/buildship-1-0-18-is-now-available/19012
def freemind_src = "../freemind-src-1.0.0.zip";
if (project.file(freemind_src).exists()) {
    eclipse {
        classpath {
            file {
                whenMerged {
                    def lib = entries.find { it.path.contains 'freemind.jar' }
                    lib.sourcePath = fileReference(file(freemind_src))
                }
            }
        }
    }
}

compileJava {
    // Set compatibility to Java 1.8 to avoid breaking existing installs
    sourceCompatibility = '1.8'
    targetCompatibility = '1.8'
}

jar {
    manifest {
        attributes("Build-date": getDateTime(),
                   "Git-hash": getGitHash(),
                   "Git-repo": "https://github.com/smchan514/my-freemind-plugin")
    }
}

tasks.register("copyJars", Copy) {
    from("build/libs")
    from configurations.runtimeClasspath
    into("build/staging/myplugin")
    include("*.jar")
    
    dependsOn('jar')
}

tasks.register("copyPluginXml", Copy) {
    from(".")
    into("build/staging")
    include("MyPlugin.xml")
}

tasks.register("createStaging", Copy) {
    dependsOn('copyJars', 'copyPluginXml')
}

tasks.register("createZip", Zip) {

    archiveBaseName = "freemind-myplugin"
    archiveVersion = getDate() + "-git" + getGitHash()
    
    from("build/staging")
    include("**/*")
    
    dependsOn('createStaging')
}

assemble.dependsOn createZip
